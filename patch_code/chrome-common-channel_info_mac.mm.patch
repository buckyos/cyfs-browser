diff --git a/chrome/common/channel_info_mac.mm b/chrome/common/channel_info_mac.mm
index 59da30cbee34e28d6c641d8a8f2ffb973f4ec056..443b3e9726e3c3c8da992ccd4b67fc849643db98 100644
--- a/chrome/common/channel_info_mac.mm
+++ b/chrome/common/channel_info_mac.mm
@@ -4,12 +4,17 @@
 
 #include "chrome/common/channel_info.h"
 
+#include "base/path_service.h"
+#include "base/files/file_path.h"
+#include <fstream>
+
 #import <Foundation/Foundation.h>
 
 #include <tuple>
 
 #include "base/check.h"
 #include "base/mac/bundle_locations.h"
+#include "base/logging.h"
 #include "base/no_destructor.h"
 #include "base/strings/sys_string_conversions.h"
 #include "build/branding_buildflags.h"
@@ -141,6 +146,64 @@ std::string GetChannelName(WithExtendedStable with_extended_stable) {
   return channel.name;
 }
 
+std::string GetCYFSRuntimeVersion() {
+  std::string version_str("0.0.1");
+  base::FilePath user_data_path;
+  if (!base::PathService::Get(base::DIR_APP_DATA, &user_data_path)) {
+    VLOG(1) << "failed to get user data dir";
+    return version_str;
+  }
+  user_data_path = user_data_path.AppendASCII("cyfs")
+  .AppendASCII("services")
+  .AppendASCII("runtime")
+  .AppendASCII("www")
+  .AppendASCII("version.html");
+
+  std::ifstream input_file(user_data_path.AsUTF8Unsafe(), std::ios::binary);
+  if (!input_file.is_open()) {
+    LOG(INFO) << "failed to open " << user_data_path;
+	  return version_str;
+  }
+
+  std::string().swap(version_str);
+  while (input_file) {
+    std::string buffer(1024, '\0');
+    input_file.read(&buffer.front(), buffer.size());
+    version_str = buffer.substr(0, input_file.gcount());
+  }
+  LOG(INFO) << "Cyfs runtime version " << version_str;
+  return version_str;
+}
+
+std::string GetCYFSBrowserVersion() {
+  std::string version_str("0.0.1");
+  base::FilePath user_data_path;
+  if (!base::PathService::Get(base::DIR_APP_DATA, &user_data_path)) {
+    VLOG(1) << "failed to get user data dir";
+    return version_str;
+  }
+  user_data_path = user_data_path.AppendASCII("cyfs")
+  .AppendASCII("services")
+  .AppendASCII("runtime")
+  .AppendASCII("www")
+  .AppendASCII("browser_version.html");
+
+  std::ifstream input_file(user_data_path.AsUTF8Unsafe(), std::ios::binary);
+  if (!input_file.is_open()) {
+    LOG(INFO) << "failed to open " << user_data_path;
+	  return version_str;
+  }
+
+  std::string().swap(version_str);
+  while (input_file) {
+    std::string buffer(1024, '\0');
+    input_file.read(&buffer.front(), buffer.size());
+    version_str = buffer.substr(0, input_file.gcount());
+  }
+  LOG(INFO) << "Cyfs Browser version " << version_str;
+  return version_str;
+}
+
 version_info::Channel GetChannelByName(const std::string& channel) {
 #if BUILDFLAG(GOOGLE_CHROME_BRANDING)
   if (channel.empty() || channel == "extended")
